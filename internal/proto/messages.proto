syntax = "proto3";

package messages;
option go_package = "messages";
import "table.proto";
import "google/protobuf/empty.proto";

/**
 * @exclude
 * Please ensure comments are updated when fields are updated
 * comments are used to generate documentation via protoc-gen-go
*/

enum EventType {
    UNKNOWN_EVENT = 0;
    PING = 1;
    PONG = 2;
    // Event used when we're joining the game
    JOIN_ROOM = 32;

    // Used when emiting the state of the current table.
    TABLE_STATE = 33;
    TABLE_SIT = 34;
    TABLE_STAND = 35;

    TABLE_SIT_ACK = 36;
    TABLE_STAND_ACK = 37;

    START_GAME = 38;
    END_GAME = 39;

    PREFLOP_HAND = 51;
    FLOP = 52;
    TURN = 53;
    RIVER = 54;

    TIMER = 64;
    ACTION = 65;
    ACTION_ACK = 66;

    CHAT_MSG = 128;
    CHAT_MSG_ACK = 129;
}

message Packet {
    EventType event = 1;
    string table_id = 2;

    oneof payload {
        SitEvent sit = 3;
        SitAck sit_ack = 4;
        StandEvent stand = 5;

        table.Table state = 6;

        table.CardSet hand = 7;
        table.CardSet flop = 8;
        table.CardSet turn = 9;
        table.CardSet river = 10;

        ActionMsg action = 11;
        ActionAck action_ack = 12;

        ChatMsg msg = 100;

        KickMsg kick = 102;

        google.protobuf.Empty empty = 254;
    }

}

message SitEvent {
    int32 chips = 3; 
}

message SitAck {
    string table_id = 1;
    bool sat_down = 2;
    int32 seat_num = 3;
    string reason = 4;
}

enum KickReason {
    BANNED = 0;
    STOOD_UP = 1;
    BUSTED = 2;
}

message KickMsg {
    string username = 1;
    KickReason reason = 2;
    string details = 3;
    int64 balance = 4;
}

message ChatMsg {
    string data = 1;
    int32 message_id = 2;
    string user_id = 3;
    int32 timestamp = 4;
}

enum ActionType {
    UNKNOWN = 0;

    FOLD = 1;
    CALL = 2;
    RAISE = 3;
    ALL_IN = 4;
}

message ActionMsg {
    ActionType type = 1;
    int32 chips = 2;
    int32 nonce = 3;
}

message ActionAck {
    bool ok = 1;
    string error = 2;
    int32 nonce = 3;
}
